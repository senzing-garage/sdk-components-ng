
.sz-dt-header-context-menu {
    display: flex;
    flex-direction: column;
    flex-wrap: nowrap;
    width: 150px;
    color: #666;

    button {
        color: #666;
        background-color: #ebedff;
        font-size: .75em;
        padding: 2px 4px;
        border-top: none;
        border-left: 1px solid #666;
        border-bottom: 1px solid #666;
        border-right: 1px solid #666;
        border-radius: 0;
        text-align: left;
        cursor: pointer;
        -webkit-user-select: none;
        user-select: none;

        &:focus, &:focus-visible, &:focus-within {
            outline: none;
        }

        &:first-child {
            border-top: 1px solid #666;
            border-top-left-radius: 4px;
            border-top-right-radius: 4px;
        }
        &:last-child {
            border-bottom-left-radius: 4px;
            border-bottom-right-radius: 4px;
            border-bottom: 1px solid #666;
        }
    }
}
/*  when content is through innerHTML the View Encapsulation 
    considers the tags to be outside of the component
 */
sz-data-table {
    tbody {
        td.expandable {
            max-height: 40px;
            /* hide everything after first row */
            .cell-content {
                div {
                    visibility: hidden;
                    &:first-child {
                        visibility: visible;
                    }
                }
            }
            /*when expanded show content */
            &.expanded {
                max-height: 2000px;

                .cell-content div {
                    visibility: unset;
                }
            }
        }
        tr:has(td.expanded) {
            td {
                max-height: unset;
                /*&.expanded .min-max-toggle {
                    bottom: unset;
                }*/
            }
            td.expandable:not(.expanded) .min-max-toggle {
                top: 25px;
            }
            td.expandable.expanded .min-max-toggle {
                /*position: relative !important;*/
                /*bottom: unset !important;*/
            }
            /*
            td.expandable.expanded .min-max-toggle {
                bottom: unset;
            }
            td.expandable:not(.expanded) {
                border: 1px solid rgb(250, 215, 149);
                .min-max-toggle {
                    
                    // we unpin from the bottom of cell
                    // so it will stick right below the first
                    // line of content
                    bottom: unset;
                }
            }*/
        }
    }
}